[project]
name = "fentpic"
version = "1.0.0"
description = "Image hosting platform with modern UI components"
authors = [
    {name = "xxanqw", email = "your-email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["image-hosting", "flask", "python", "web-app", "storybook", "ui-components"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Graphics",
]

dependencies = [
    "blinker==1.9.0",
    "certifi==2024.12.14",
    "charset-normalizer==3.4.1",
    "click==8.1.8",
    "colorama==0.4.6",
    "dnspython==2.7.0",
    "Flask==3.1.0",
    "Flask-Dance==7.1.0",
    "idna==3.10",
    "itsdangerous==2.2.0",
    "Jinja2==3.1.5",
    "MarkupSafe==3.0.2",
    "oauthlib==3.2.2",
    "pymongo==4.10.1",
    "pytz==2024.2",
    "requests==2.32.3",
    "requests-oauthlib==2.0.0",
    "urllib3==2.3.0",
    "URLObject==2.4.3",
    "waitress==3.0.2",
    "python-dotenv==1.0.0",
    "flask-swagger-ui==4.11.1",
    "pyyaml==6.0.1",
    "Werkzeug==3.1.3",
]

[project.optional-dependencies]
dev = [
    "pip-licenses==4.3",
    "pytest==7.4.4",
    "sphinx==7.1.2",
    "sphinx-rtd-theme==2.0.0",
]

[project.urls]
Homepage = "https://github.com/xxanqw/fentpic"
Repository = "https://github.com/xxanqw/fentpic.git"
Issues = "https://github.com/xxanqw/fentpic/issues"
Documentation = "https://github.com/xxanqw/fentpic#readme"

[project.scripts]
fentpic = "app:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["static", "templates"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
